//aight


enum DeviceRole {
       ROLE_UNKNOWN, // Unknown value. This is a generic placeholder representing the case in which an appropriate value could not be determined.  Never transmitted in this version of the standard.
       ROLE_CONTROL, // Microgrid controller, a control service.
       ROLE_BUTTON, // Source power device.
       ROLE_CLOCK, // Load power device.
       
   }; // enum DeviceRole


enum Colors{
    COLOR_GREEN,
    COLOR_ORANGE,
    COLOR_BLUE,
    COLOR_YELLOW,
    COLOR_RED,
};


struct Heartbeat{
    string deviceId;
    uint32 sequenceNumber;
};

struct SysName{
    string deviceId;

    string sysName;
};


struct timeValue{
    float seconds;
    long minutes;
};

struct ClockCommand{

    string sysName;

    long isOff;

    long doDisplayTime;

    timeValue time;

    Colors mainColor;

    Colors blueGearColor;

    Colors orangeGearColor;

};

struct ButtonCommand{

    string sysName;

    // need state vals for these
    long orangeState;

    long blueState;

};

struct ButtonData{
    string deviceId;

    string sysName;

    long mainPressed;

    long tapoutPressed;
};



struct ClockInfo{

    string topicName;

    string deviceId;

    long digits;

    long hasGears; 
};


struct ButtonInfo{
    
    string topicName;

    string deviceId;
    
    //keyed, -1 = no color, 0 = blue, 1 = orange, more appended as needed. 
    long color;
};



struct DeviceInfo{
    @key string deviceId;

    DeviceRole role;

    string sysName;

    string displayName;

    @optional ClockInfo clockInfo;

    @optional ButtonInfo buttonInfo;

};